{"version":3,"file":"js/874.bea4fc7c.js","mappings":"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","sources":["webpack://front-end-final/./src/views/PlaylistView.vue","webpack://front-end-final/./src/api/playlist.js","webpack://front-end-final/./src/views/PlaylistView.vue?08b7"],"sourcesContent":["<template>\r\n\r\n  <span>{{ baseMsg }}</span> / <b>{{ msg }}</b>\r\n\r\n  <div>\r\n    <br>\r\n    <el-tabs type=\"card\" v-model=\"activeTab\">\r\n\r\n      <el-tab-pane label=\"我的播放列表\" name=\"search\">\r\n        <el-form-item label=\"播放列表\">\r\n          <el-select v-model=\"detailPlaylistInfo.name\" placeholder=\"请选择播放列表\" @change=\"detailItem()\">\r\n            <el-option\r\n                v-for=\"item in options\"\r\n                :key=\"item.value\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n      </el-tab-pane>\r\n\r\n      <el-tab-pane label=\"新增播放列表\" name=\"add\">\r\n        <el-form :inline=\"true\" :model=\"addPlaylistInfo\">\r\n          <el-row>\r\n            <el-col span=\"8\">\r\n              <el-form-item label=\"播放列表名称\" :required=\"true\">\r\n                <el-input v-model=\"addPlaylistInfo.name\" placeholder=\"请输入播放列表名称\"/>\r\n              </el-form-item>\r\n              <el-form-item label=\"标签\" :required=\"true\">\r\n                <el-input v-model=\"addPlaylistInfo.tab\" placeholder=\"请输入标签\"/>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n\r\n\r\n          <el-row>\r\n            <el-col span=\"8\">\r\n              <el-form-item label=\"&emsp;\" label-width=\"400px\">\r\n              </el-form-item>\r\n              <el-form-item>\r\n                <el-button type=\"primary\" @click=\"addItem()\">增加</el-button>\r\n                <el-button type=\"primary\" @click=\"clearItem()\">重置</el-button>\r\n              </el-form-item>\r\n            </el-col>\r\n          </el-row>\r\n        </el-form>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n\r\n\r\n    <br>\r\n    <br>\r\n    <hr>\r\n    <el-table :data=\"listPlaylistInfo\" style=\"width: 100%\">\r\n      <el-table-column prop=\"id\" label=\"id\" width=\"100\" v-if=\"false\"/>\r\n      <el-table-column prop=\"seq\" label=\"序号\" width=\"100\"/>\r\n\r\n      <el-table-column prop=\"name\" label=\"播放列表\" width=\"200\">\r\n        <template v-slot=\"scope\">\r\n          <el-input type=\"text\" v-model=\"scope.row.name\" v-show=\"scope.row.isEdit\"/>\r\n          <span v-show=\"!scope.row.isEdit\">{{ scope.row.name }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"tab\" label=\"标签\" width=\"400\">\r\n        <template v-slot=\"scope\">\r\n          <el-input type=\"text\" v-model=\"scope.row.tab\" v-show=\"scope.row.isEdit\"/>\r\n          <span v-show=\"!scope.row.isEdit\">\r\n            {{ scope.row.tab.toString() }}\r\n          </span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column prop=\"time\" label=\"已播放时长(小时)\" width=\"200\">\r\n        <template v-slot=\"scope\">\r\n          <el-input type=\"text\" v-model=\"scope.row.time\" v-show=\"scope.row.isEdit\"/>\r\n          <span v-show=\"!scope.row.isEdit\">{{ scope.row.time }}</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column fixed=\"right\" label=\"操作\" width=\"200\">\r\n        <template #default=\"scope\">\r\n          <el-button\r\n              round\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              @click.prevent=\"editItem(scope)\"\r\n              v-show=\"!scope.row.isEdit\"\r\n          >\r\n            编辑\r\n          </el-button>\r\n          <el-button\r\n              round\r\n              type=\"success\"\r\n              size=\"small\"\r\n              @click.prevent=\"updateItem(scope)\"\r\n              v-show=\"scope.row.isEdit\"\r\n          >\r\n            更新\r\n\r\n          </el-button>\r\n          <el-button\r\n              round\r\n              type=\"danger\"\r\n              size=\"small\"\r\n              @click.prevent=\"removeItem(scope)\"\r\n          >\r\n            删除\r\n          </el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport PlaylistApi from '../api/playlist.js';\r\nimport Promise from '../utils/promise.js';\r\n\r\nexport default {\r\n  name: \"PlaylistView\",\r\n  props: {\r\n    msg: String,\r\n    baseMsg: String\r\n  },\r\n  data() {\r\n    return {\r\n\r\n      options: [],\r\n      activeTab: \"search\",\r\n      listPlaylistInfo: [],\r\n      detailPlaylistInfo: {},\r\n      addPlaylistInfo: {\r\n        name: \"\",\r\n        tab: []\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n    Promise.ajax({\r\n      \"type\": \"get\",\r\n      \"url\": \"https://meta-mock/playlistInfo/list\",\r\n      \"data\": \"\"\r\n    }).then(res => {\r\n      // console.log(res.data);\r\n      this.listPlaylistInfo = res.data;\r\n\r\n      // 构造 options 下拉列表数组\r\n      let playlistOptions = []\r\n      const listPlaylistInfoOrigin = this.listPlaylistInfo;\r\n      playlistOptions.push({\r\n        value: \"全部\",\r\n        label: \"全部\"\r\n      });\r\n      for (let index in listPlaylistInfoOrigin) {\r\n        let playlistOption = {};\r\n        playlistOption.value = listPlaylistInfoOrigin[index].name;\r\n        playlistOption.label = listPlaylistInfoOrigin[index].name;\r\n        playlistOptions.push(playlistOption)\r\n      }\r\n\r\n\r\n      // console.log(playlistOptions);\r\n      this.options = playlistOptions;\r\n\r\n    })\r\n\r\n\r\n  },\r\n  methods: {\r\n    addItem: function () {\r\n\r\n      // 新增数据简单校验\r\n      for (const key in this.addPlaylistInfo) {\r\n        if (!this.addPlaylistInfo[key]) {\r\n          return this.$message({\r\n            type: 'error',\r\n            message: '请输入必填内容'\r\n          })\r\n        }\r\n      }\r\n\r\n\r\n      // console.log(this.addPlaylistInfo)\r\n      Promise.ajax({\r\n        \"type\": \"post\",\r\n        \"url\": \"https://meta-mock/playlistInfo/add\",\r\n        \"data\": JSON.stringify(this.addPlaylistInfo)\r\n      }).then(res => {\r\n        // console.log(res.data);\r\n        if (res.code == 200) {\r\n          this.listPlaylistInfo = res.data;\r\n          this.$message({\r\n            type: 'info',\r\n            message: res.message\r\n          })\r\n        }\r\n\r\n      })\r\n\r\n    },\r\n    clearItem: function () {\r\n      this.addPlaylistInfo = {\r\n        name: \"\",\r\n        tab: []\r\n      };\r\n    },\r\n    removeItem: function (scope) {\r\n\r\n      this.$confirm('是否执行删除操作?', '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(() => {\r\n        Promise.ajax({\r\n          \"type\": \"post\",\r\n          \"url\": \"https://meta-mock/playlistInfo/remove\",\r\n          \"data\": scope.row.id\r\n        }).then(res => {\r\n          // console.log(res.data);\r\n          if (res.code == 200) {\r\n            this.listPlaylistInfo = res.data;\r\n            this.$message({\r\n              type: 'info',\r\n              message: res.message\r\n            })\r\n          }\r\n\r\n        })\r\n\r\n      }).catch(() => {\r\n\r\n      })\r\n\r\n    },\r\n    editItem: function (scope) {\r\n      scope.row.isEdit = true;\r\n    },\r\n    updateItem: function (scope) {\r\n      scope.row.isEdit = false;\r\n\r\n      Promise.ajax({\r\n        \"type\": \"post\",\r\n        \"url\": \"https://meta-mock/playlistInfo/update\",\r\n        \"data\": JSON.stringify(scope.row)\r\n      }).then(res => {\r\n        // console.log(res.data);\r\n        if (res.code == 200) {\r\n          this.listPlaylistInfo = res.data;\r\n          this.$message({\r\n            type: 'info',\r\n            message: res.message\r\n          })\r\n        }\r\n      })\r\n\r\n    },\r\n    detailItem: function () {\r\n      // console.log(this.detailPlaylistInfo)\r\n\r\n      Promise.ajax({\r\n        \"type\": \"post\",\r\n        \"url\": \"https://meta-mock/playlistInfo/detail\",\r\n        \"data\": JSON.stringify(this.detailPlaylistInfo)\r\n      }).then(res => {\r\n        // console.log(res.data);\r\n        if (res.code == 200) {\r\n          this.listPlaylistInfo = res.data;\r\n          this.$message({\r\n            type: 'info',\r\n            message: res.message\r\n          })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import Mock from \"mockjs\";\r\nimport MockData from \"../mock/data.js\"\r\nimport Query from \"@/utils/query\";\r\n\r\nconst playlistInfoList = MockData.playlistData.playlistInfo\r\n\r\nlet listPlaylistInfo = Mock.mock('https://meta-mock/playlistInfo/list', 'get', () => {\r\n\r\n    return {\r\n        code: 200,\r\n        success: true,\r\n        message: '获取所有歌单数据成功！',\r\n        data: playlistInfoList\r\n    }\r\n});\r\n\r\nlet detailPlaylistInfo = Mock.mock('https://meta-mock/playlistInfo/detail', 'post', (options) => {\r\n\r\n    const detailPlaylistInfoItem = JSON.parse(options.body);\r\n\r\n    let queryList = []\r\n    playlistInfoList.forEach(\r\n        function (item, index) {\r\n            queryList.push(item.name)\r\n        }\r\n    )\r\n\r\n    const detailNameReturn = Query.fuzzyQuery(queryList, detailPlaylistInfoItem.name)\r\n\r\n    let detailPlaylistInfoReturn = []\r\n\r\n    if (detailNameReturn.length === 0) {\r\n        return {\r\n            code: 200,\r\n            success: true,\r\n            message: '获取歌单详情成功！',\r\n            data: playlistInfoList\r\n        }\r\n    }\r\n\r\n    for (let index in playlistInfoList) {\r\n        for (let key in detailNameReturn) {\r\n            if (playlistInfoList[index].name === detailNameReturn[key]) {\r\n                detailPlaylistInfoReturn.push(playlistInfoList[index]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        code: 200,\r\n        success: true,\r\n        message: '获取歌单详情成功！',\r\n        data: detailPlaylistInfoReturn\r\n    }\r\n});\r\n\r\n\r\nlet addPlaylistInfo = Mock.mock('https://meta-mock/playlistInfo/add', 'post', (options) => {\r\n\r\n    const addPlaylistInfoItem = JSON.parse(options.body);\r\n\r\n    const addDataGenerator = Mock.mock({\r\n        'id': '@guid',\r\n        'seq': '@increment',\r\n    });\r\n    addPlaylistInfoItem.id = addDataGenerator.id;\r\n    addPlaylistInfoItem.seq = addDataGenerator.seq;\r\n    addPlaylistInfoItem.time = 0;\r\n\r\n    playlistInfoList.unshift(addPlaylistInfoItem);\r\n\r\n\r\n    return {\r\n        code: 200,\r\n        success: true,\r\n        message: '新增歌单数据成功！',\r\n        data: playlistInfoList\r\n    }\r\n})\r\n\r\nlet removeAllPlaylistInfo = Mock.mock('https://meta-mock/playlistInfo/removeAll', 'post', (options) => {\r\n\r\n    const removeAllPlaylistInfoItem = JSON.parse(options.body);\r\n\r\n    removeAllPlaylistInfoItem.forEach((param) => {\r\n        const findIndex = playlistInfoList.findIndex((item) => {\r\n            return item.id == param;\r\n        });\r\n        playlistInfoList.splice(findIndex, 1);\r\n\r\n    })\r\n\r\n    return {\r\n        code: 200,\r\n        success: true,\r\n        message: '批量删除歌单数据成功',\r\n        data: playlistInfoList\r\n    }\r\n})\r\n\r\n\r\nlet removePlaylistInfo = Mock.mock('https://meta-mock/playlistInfo/remove', 'post', (options) => {\r\n\r\n    const removePlaylistInfoItem = options.body;\r\n\r\n    for (let index in playlistInfoList) {\r\n        if (playlistInfoList[index].id === removePlaylistInfoItem) {\r\n            playlistInfoList.splice(index, 1)\r\n        }\r\n    }\r\n\r\n    return {\r\n        code: 200,\r\n        success: true,\r\n        message: '删除歌单数据成功',\r\n        data: playlistInfoList\r\n    }\r\n})\r\n\r\nlet updatePlaylistInfo = Mock.mock('https://meta-mock/playlistInfo/update', 'post', (options) => {\r\n\r\n    const updatePlaylistInfoItem = JSON.parse(options.body);\r\n\r\n    for (let index in playlistInfoList) {\r\n        if (playlistInfoList[index].id === updatePlaylistInfoItem.id) {\r\n            playlistInfoList[index] = updatePlaylistInfoItem;\r\n        }\r\n    }\r\n\r\n    return {\r\n        code: 200,\r\n        success: true,\r\n        message: '更新歌单数据成功',\r\n        data: playlistInfoList\r\n    }\r\n})\r\n\r\nexport default {\r\n    listPlaylistInfo,\r\n    detailPlaylistInfo,\r\n    addPlaylistInfo,\r\n    removePlaylistInfo,\r\n    removeAllPlaylistInfo,\r\n    updatePlaylistInfo\r\n}","import { render } from \"./PlaylistView.vue?vue&type=template&id=094db0a8\"\nimport script from \"./PlaylistView.vue?vue&type=script&lang=js\"\nexport * from \"./PlaylistView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","_toDisplayString","$props","baseMsg","msg","_hoisted_2","_createVNode","_component_el_tabs","type","$data","activeTab","$event","_component_el_tab_pane","label","name","_component_el_form_item","_component_el_select","detailPlaylistInfo","placeholder","onChange","_cache","$options","detailItem","_createElementBlock","_Fragment","_renderList","options","item","_createBlock","_component_el_option","key","value","_component_el_form","inline","model","addPlaylistInfo","_component_el_row","_component_el_col","span","required","_component_el_input","tab","_component_el_button","onClick","addItem","clearItem","_hoisted_5","_hoisted_6","_hoisted_7","_component_el_table","data","listPlaylistInfo","style","_component_el_table_column","prop","width","scope","row","isEdit","toString","time","fixed","default","_withCtx","round","size","_withModifiers","editItem","updateItem","removeItem","playlistInfoList","MockData","playlistData","playlistInfo","Mock","code","success","message","detailPlaylistInfoItem","JSON","parse","body","queryList","forEach","index","push","detailNameReturn","Query","fuzzyQuery","detailPlaylistInfoReturn","length","addPlaylistInfoItem","addDataGenerator","id","seq","unshift","removeAllPlaylistInfoItem","param","findIndex","splice","removePlaylistInfoItem","updatePlaylistInfoItem","props","String","mounted","Promise","ajax","then","res","this","playlistOptions","listPlaylistInfoOrigin","playlistOption","methods","$message","stringify","$confirm","confirmButtonText","cancelButtonText","catch","__exports__","render"],"sourceRoot":""}